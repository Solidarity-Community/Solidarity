using System;

if (Args.Count is not 1)
{
	Console.WriteLine("Please provide only one argument for the migration name.");
	return;
}

var migrationName = Args[0];
var migrationsDir = Path.Combine(Directory.GetCurrentDirectory(), "Infrastructure", "Persistence", "Migrations");

Console.WriteLine("‚öíÔ∏è Adding migration...");
Process.Start("dotnet", $"""ef migrations add {migrationName} --output-dir "{migrationsDir}" --namespace Solidarity.Infrastructure.Persistence.Migrations""").WaitForExit();

Console.WriteLine("üìê Formatting code...");
// go through changed/added files in the Infrastructure/Persistence/Migrations folder and do some things manually:
// - Remove the lines starting with // <auto-generated>
// - Remove the lines starting with #pragma
// - Remove the lines starting with #nullable

foreach (var file in Directory.GetFiles(migrationsDir))
{
	var lines = File.ReadAllLines(file).ToList();
	lines.RemoveAll(l => l.StartsWith("#pragma") || l.StartsWith("#nullable"));
	var code = string.Join(Environment.NewLine, lines);
	code = code.Replace(Environment.NewLine + Environment.NewLine + Environment.NewLine, Environment.NewLine + Environment.NewLine);
	File.WriteAllText(file, code);
}

Process.Start("dotnet", "format --include-generated --severity info").WaitForExit();